{"ast":null,"code":"var _jsxFileName = \"/Users/lariciamota/Documents/Cie\\u0302ncia da Computac\\u0327a\\u0303o/7\\xBA peri\\u0301odo/Microserv/Projeto/microserv-front/src/components/Charts/Charts.js\";\nimport React, { Component } from 'react';\nimport { Header, Grid } from 'semantic-ui-react';\nimport { AreaChart, XAxis, YAxis, CartesianGrid, Tooltip, Area } from 'recharts';\nimport { getInitialData } from \"./../../DataProvider\";\nexport default class Charts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: getInitialData()\n    };\n  }\n\n  render() {\n    // const data = getInitialData();\n    function createData(array) {\n      let data = [];\n      array.forEach(element => {\n        let newElement = {\n          \"value\": element\n        };\n        data.push(newElement);\n      });\n      return data;\n    }\n\n    const key = 'array'; // const secondData = createData(data[1][key]);\n    // const thirdData = createData(data[2][key]);\n    // const fourthData = createData(data[3][key]);\n    // const fifthData = createData(data[4][key]);\n\n    const colorDefinition = React.createElement(\"linearGradient\", {\n      id: \"colorValue\",\n      x1: \"0\",\n      y1: \"0\",\n      x2: \"0\",\n      y2: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"stop\", {\n      offset: \"5%\",\n      stopColor: \"#8884d8\",\n      stopOpacity: 0.8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"stop\", {\n      offset: \"95%\",\n      stopColor: \"#8884d8\",\n      stopOpacity: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"Charts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      content: \"DCM - Data Centering Middleware\",\n      subheader: \"Charts\",\n      dividing: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      columns: 2,\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(AreaChart, {\n      width: 730,\n      height: 250,\n      data: createData(data[0][key]),\n      margin: {\n        top: 10,\n        right: 30,\n        left: 0,\n        bottom: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"defs\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, colorDefinition), React.createElement(XAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Area, {\n      type: \"monotone\",\n      dataKey: \"value\",\n      stroke: \"#8884d8\",\n      fillOpacity: 1,\n      fill: \"url(#colorValue)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(AreaChart, {\n      width: 730,\n      height: 250,\n      data: secondData,\n      margin: {\n        top: 10,\n        right: 30,\n        left: 0,\n        bottom: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"defs\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, colorDefinition), React.createElement(XAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Area, {\n      type: \"monotone\",\n      dataKey: \"value\",\n      stroke: \"#8884d8\",\n      fillOpacity: 1,\n      fill: \"url(#colorValue)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(AreaChart, {\n      width: 730,\n      height: 250,\n      data: thirdData,\n      margin: {\n        top: 10,\n        right: 30,\n        left: 0,\n        bottom: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"defs\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, colorDefinition), React.createElement(XAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Area, {\n      type: \"monotone\",\n      dataKey: \"value\",\n      stroke: \"#8884d8\",\n      fillOpacity: 1,\n      fill: \"url(#colorValue)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(AreaChart, {\n      width: 730,\n      height: 250,\n      data: fourthData,\n      margin: {\n        top: 10,\n        right: 30,\n        left: 0,\n        bottom: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"defs\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, colorDefinition), React.createElement(XAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Area, {\n      type: \"monotone\",\n      dataKey: \"value\",\n      stroke: \"#8884d8\",\n      fillOpacity: 1,\n      fill: \"url(#colorValue)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(AreaChart, {\n      width: 730,\n      height: 250,\n      data: fifthData,\n      margin: {\n        top: 10,\n        right: 30,\n        left: 0,\n        bottom: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"defs\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, colorDefinition), React.createElement(XAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(Area, {\n      type: \"monotone\",\n      dataKey: \"value\",\n      stroke: \"#8884d8\",\n      fillOpacity: 1,\n      fill: \"url(#colorValue)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/lariciamota/Documents/Ciência da Computação/7º período/Microserv/Projeto/microserv-front/src/components/Charts/Charts.js"],"names":["React","Component","Header","Grid","AreaChart","XAxis","YAxis","CartesianGrid","Tooltip","Area","getInitialData","Charts","constructor","props","state","data","render","createData","array","forEach","element","newElement","push","key","colorDefinition","top","right","left","bottom","secondData","thirdData","fourthData","fifthData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Header, Grid } from 'semantic-ui-react'\nimport { AreaChart, XAxis, YAxis, CartesianGrid, Tooltip, Area } from 'recharts';\nimport { getInitialData } from \"./../../DataProvider\";\n\nexport default class Charts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          data: getInitialData()\n        };\n    }\n    render() {\n        // const data = getInitialData();\n\n\n        function createData(array){\n            let data = []\n            array.forEach(element => {\n                let newElement = { \"value\": element };\n                data.push(newElement);\n            });\n            return data;\n        }\n\n        const key = 'array';\n       \n        // const secondData = createData(data[1][key]);\n\n        // const thirdData = createData(data[2][key]);\n\n        // const fourthData = createData(data[3][key]);\n\n        // const fifthData = createData(data[4][key]);\n\n        const colorDefinition = (\n            <linearGradient id=\"colorValue\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8} />\n                <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0} />\n            </linearGradient>\n        )\n\n        return (\n            <div className=\"Charts\">\n                <Header as='h2' content='DCM - Data Centering Middleware' subheader='Charts' dividing />\n\n                <Grid columns={2} centered>\n                    <Grid.Row>\n                        <AreaChart width={730} height={250} data={createData(data[0][key])}\n                            margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\n                            <defs>\n                                {colorDefinition}\n                            </defs>\n                            <XAxis />\n                            <YAxis />\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <Tooltip />\n                            <Area type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorValue)\" />\n                        </AreaChart>\n\n                        <AreaChart width={730} height={250} data={secondData}\n                            margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\n                            <defs>\n                                {colorDefinition}\n                            </defs>\n                            <XAxis />\n                            <YAxis />\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <Tooltip />\n                            <Area type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorValue)\" />\n                        </AreaChart>\n                    </Grid.Row>\n\n                    <Grid.Row>\n                        <AreaChart width={730} height={250} data={thirdData}\n                            margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\n                            <defs>\n                                {colorDefinition}\n                            </defs>\n                            <XAxis/>\n                            <YAxis />\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <Tooltip />\n                            <Area type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorValue)\" />\n                        </AreaChart>\n\n                        <AreaChart width={730} height={250} data={fourthData}\n                            margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\n                            <defs>\n                                {colorDefinition}\n                            </defs>\n                            <XAxis />\n                            <YAxis />\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <Tooltip />\n                            <Area type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorValue)\" />\n                        </AreaChart>\n                    </Grid.Row>\n\n                    <Grid.Row>\n                        <AreaChart width={730} height={250} data={fifthData}\n                            margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\n                            <defs>\n                                {colorDefinition}\n                            </defs>\n                            <XAxis />\n                            <YAxis />\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <Tooltip />\n                            <Area type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorValue)\" />\n                        </AreaChart>\n                    </Grid.Row>\n                </Grid>\n\n\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}