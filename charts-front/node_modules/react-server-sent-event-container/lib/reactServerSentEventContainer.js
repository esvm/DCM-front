'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.serverSentEventConnect = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _eventsource = require('eventsource');

var _eventsource2 = _interopRequireDefault(_eventsource);

var _getDisplayName = require('./getDisplayName');

var _getDisplayName2 = _interopRequireDefault(_getDisplayName);

var _eventSourceProps = require('./eventSourceProps');

var _eventSourceProps2 = _interopRequireDefault(_eventSourceProps);

var _createEventSource = require('./createEventSource');

var _createEventSource2 = _interopRequireDefault(_createEventSource);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*global EventSource */

var nextVersion = 0;

var serverSentEventConnect = exports.serverSentEventConnect = function serverSentEventConnect(eventSourceUrl) {
    var withCredentials = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];
    var onOpen = arguments[2];
    var onMessage = arguments[3];
    var onError = arguments[4];
    var eventObj = arguments[5];

    var version = nextVersion++;

    return function (ComponentToDecorate) {
        var displayName = 'ServerSentEvent' + (0, _getDisplayName2.default)(ComponentToDecorate);

        var ServerSentEventComponent = function (_Component) {
            _inherits(ServerSentEventComponent, _Component);

            function ServerSentEventComponent(props, context) {
                _classCallCheck(this, ServerSentEventComponent);

                var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ServerSentEventComponent).call(this, props, context));

                _this.version = version;
                _this.state = {};

                _this.eventSourceProps = new _eventSourceProps2.default();
                _this.eventSource = (0, _createEventSource2.default)(eventSourceUrl, withCredentials = false, _this.eventSourceProps, onOpen, onMessage, onError, eventObj);
                return _this;
            }

            _createClass(ServerSentEventComponent, [{
                key: 'componentDidMount',
                value: function componentDidMount() {
                    this._subscribe();
                }
            }, {
                key: 'componentWillUnmount',
                value: function componentWillUnmount() {
                    this._unsubscribe();
                    this.eventSource.close();
                }
            }, {
                key: 'render',
                value: function render() {
                    var sseProps = this.state.sseProps;
                    return _react2.default.createElement(ComponentToDecorate, _extends({ eventSource: this.eventSource }, sseProps));
                }
            }, {
                key: '_subscribe',
                value: function _subscribe() {
                    if (!this.unsubscribe) {
                        this.unsubscribe = this.eventSourceProps.subscribe(this._handleChange.bind(this));
                    }
                }
            }, {
                key: '_unsubscribe',
                value: function _unsubscribe() {
                    if (this.unsubscribe) {
                        this.unsubscribe();
                        this.unsubscribe = null;
                    }
                }
            }, {
                key: '_handleChange',
                value: function _handleChange(props) {
                    if (this.unsubscribe) {
                        return;
                    }

                    this.setState({ sseProps: props });
                }
            }]);

            return ServerSentEventComponent;
        }(_react.Component);

        ServerSentEventComponent.displayName = displayName;

        if (process.env.NODE_ENV !== 'production') {
            ServerSentEventComponent.prototype.componentWillUpdate = function () {
                if (this.version === version) {
                    return;
                }

                this.version = version;
                this._subscribe();
            };
        }

        return ServerSentEventComponent;
    };
};