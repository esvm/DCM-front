{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\r\n * Container for props that come from the Server Sent Events\r\n */\n\n\nvar EventSourceProps = function () {\n  function EventSourceProps() {\n    _classCallCheck(this, EventSourceProps);\n\n    this.handlers = [];\n    this.props = {};\n  }\n\n  _createClass(EventSourceProps, [{\n    key: 'update',\n    value: function update(props) {\n      this.props = _extends({}, this.props, props);\n      this.fire();\n    }\n  }, {\n    key: 'subscribe',\n    value: function subscribe(fn) {\n      if (typeof fn !== 'function') {\n        throw new Error('Only functions can be subscribed.');\n      }\n\n      this.handlers.push(fn);\n    }\n  }, {\n    key: 'unsubscribe',\n    value: function unsubscribe(fn) {\n      this.handlers = this.handlers.filter(function (item) {\n        if (item != fn) {\n          return item;\n        }\n      });\n    }\n  }, {\n    key: 'fire',\n    value: function fire() {\n      for (var i = 0; i < this.handlers.length; i++) {\n        this.handlers[i](this.props);\n      }\n    }\n  }]);\n\n  return EventSourceProps;\n}();\n\nexports.default = EventSourceProps;","map":null,"metadata":{},"sourceType":"script"}